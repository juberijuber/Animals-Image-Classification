{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/juberijuber/Image-Classification/blob/main/Image%20Classification%20Code%20Using%20MNIST%20Dataset\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0D8dNZz5c0pU"
      },
      "outputs": [],
      "source": [
        "\n",
        "import keras\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, Flatten"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(X_train,y_train), (X_test,y_test) = keras.datasets.mnist.load_data()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bBdk8AZRkStl",
        "outputId": "caf9d46d-705f-4627-ab2b-358b30ddc2da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n",
            "\u001b[1m11490434/11490434\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.shape\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ybk4qdNAlyTL",
        "outputId": "b853b1e2-053b-4d8e-86b1-0de8d22e36c1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60000, 28, 28)"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fprG4CXOl4Os",
        "outputId": "7e600436-0490-48cc-d6b5-d4111dcfacfd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60000,)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zxERw1WzmN20",
        "outputId": "df675872-cac9-4664-daa6-f39420e2568f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000, 28, 28)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mv6b62qimNuz",
        "outputId": "afee7176-7e6a-45d9-b68a-5c34c2921070"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000,)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "# Assuming y_train is your target labels\n",
        "num_classes = len (np.unique(y_train))\n",
        "print(\"Number of classes: \", num_classes)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nduPKKCml8rM",
        "outputId": "ae651c31-4338-478f-cd36-fb27dfeaa667"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of classes:  10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aU7AQOhMmDjz",
        "outputId": "46c3c0b6-5f74-4fe9-c58a-14577a469415"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([5, 0, 4, ..., 5, 6, 8], dtype=uint8)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.imshow(X_train[0])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "ipcMvdwKmcJE",
        "outputId": "11de75c5-930d-4f87-e1f5-458f77a54792"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.image.AxesImage at 0x7b2b8f88e8f0>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train = X_train/255\n",
        "X_test = X_test/255"
      ],
      "metadata": {
        "id": "lFMXhS-Cmeos"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train[0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L1GqfVIBm4ts",
        "outputId": "10899875-1d57-4f75-cf76-06025aa6c23f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.01176471, 0.07058824, 0.07058824,\n",
              "        0.07058824, 0.49411765, 0.53333333, 0.68627451, 0.10196078,\n",
              "        0.65098039, 1.        , 0.96862745, 0.49803922, 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.11764706, 0.14117647,\n",
              "        0.36862745, 0.60392157, 0.66666667, 0.99215686, 0.99215686,\n",
              "        0.99215686, 0.99215686, 0.99215686, 0.88235294, 0.6745098 ,\n",
              "        0.99215686, 0.94901961, 0.76470588, 0.25098039, 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.19215686, 0.93333333, 0.99215686,\n",
              "        0.99215686, 0.99215686, 0.99215686, 0.99215686, 0.99215686,\n",
              "        0.99215686, 0.99215686, 0.98431373, 0.36470588, 0.32156863,\n",
              "        0.32156863, 0.21960784, 0.15294118, 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.07058824, 0.85882353, 0.99215686,\n",
              "        0.99215686, 0.99215686, 0.99215686, 0.99215686, 0.77647059,\n",
              "        0.71372549, 0.96862745, 0.94509804, 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.31372549, 0.61176471,\n",
              "        0.41960784, 0.99215686, 0.99215686, 0.80392157, 0.04313725,\n",
              "        0.        , 0.16862745, 0.60392157, 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.05490196,\n",
              "        0.00392157, 0.60392157, 0.99215686, 0.35294118, 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.54509804, 0.99215686, 0.74509804, 0.00784314,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.04313725, 0.74509804, 0.99215686, 0.2745098 ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.1372549 , 0.94509804, 0.88235294,\n",
              "        0.62745098, 0.42352941, 0.00392157, 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.31764706, 0.94117647,\n",
              "        0.99215686, 0.99215686, 0.46666667, 0.09803922, 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.17647059,\n",
              "        0.72941176, 0.99215686, 0.99215686, 0.58823529, 0.10588235,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.0627451 , 0.36470588, 0.98823529, 0.99215686, 0.73333333,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.97647059, 0.99215686, 0.97647059,\n",
              "        0.25098039, 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.18039216,\n",
              "        0.50980392, 0.71764706, 0.99215686, 0.99215686, 0.81176471,\n",
              "        0.00784314, 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.15294118, 0.58039216, 0.89803922,\n",
              "        0.99215686, 0.99215686, 0.99215686, 0.98039216, 0.71372549,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.09411765, 0.44705882, 0.86666667, 0.99215686, 0.99215686,\n",
              "        0.99215686, 0.99215686, 0.78823529, 0.30588235, 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.09019608, 0.25882353,\n",
              "        0.83529412, 0.99215686, 0.99215686, 0.99215686, 0.99215686,\n",
              "        0.77647059, 0.31764706, 0.00784314, 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.07058824, 0.67058824, 0.85882353, 0.99215686,\n",
              "        0.99215686, 0.99215686, 0.99215686, 0.76470588, 0.31372549,\n",
              "        0.03529412, 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.21568627,\n",
              "        0.6745098 , 0.88627451, 0.99215686, 0.99215686, 0.99215686,\n",
              "        0.99215686, 0.95686275, 0.52156863, 0.04313725, 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.53333333,\n",
              "        0.99215686, 0.99215686, 0.99215686, 0.83137255, 0.52941176,\n",
              "        0.51764706, 0.0627451 , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ],\n",
              "       [0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        , 0.        , 0.        ,\n",
              "        0.        , 0.        , 0.        ]])"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = Sequential()\n",
        "model.add(Flatten (input_shape=(28,28)))\n",
        "model.add(Dense (128, activation='relu'))\n",
        "model.add(Dense (32, activation= 'relu'))\n",
        "model.add(Dense (10, activation='softmax'))"
      ],
      "metadata": {
        "id": "Dh5CPa6im7ZU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a47d8d7a-7a4b-4280-fa81-1f25c5796725"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/keras/src/layers/reshaping/flatten.py:37: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
            "  super().__init__(**kwargs)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 257
        },
        "id": "AuABYN4pnHbs",
        "outputId": "1ab3edee-a880-4675-9319-6d9f1f5b0082"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1mModel: \"sequential\"\u001b[0m\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ flatten (\u001b[38;5;33mFlatten\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m784\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │         \u001b[38;5;34m100,480\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)                  │           \u001b[38;5;34m4,128\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)                  │             \u001b[38;5;34m330\u001b[0m │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">784</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │         <span style=\"color: #00af00; text-decoration-color: #00af00\">100,480</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)                  │           <span style=\"color: #00af00; text-decoration-color: #00af00\">4,128</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)                  │             <span style=\"color: #00af00; text-decoration-color: #00af00\">330</span> │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m104,938\u001b[0m (409.91 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">104,938</span> (409.91 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m104,938\u001b[0m (409.91 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">104,938</span> (409.91 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.compile(loss='sparse_categorical_crossentropy', optimizer='Adam', metrics=['accuracy'])\n",
        "history = model.fit(X_train, y_train, epochs=3, validation_split=0.2)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Par_jhXYnK_c",
        "outputId": "a63fdb62-f0a6-4228-d9cb-0c84f23e2530"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/3\n",
            "\u001b[1m1500/1500\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 6ms/step - accuracy: 0.8473 - loss: 0.5114 - val_accuracy: 0.9571 - val_loss: 0.1545\n",
            "Epoch 2/3\n",
            "\u001b[1m1500/1500\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.9635 - loss: 0.1221 - val_accuracy: 0.9664 - val_loss: 0.1143\n",
            "Epoch 3/3\n",
            "\u001b[1m1500/1500\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 3ms/step - accuracy: 0.9761 - loss: 0.0767 - val_accuracy: 0.9704 - val_loss: 0.1038\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_prob = model.predict(X_test)\n",
        "print(y_prob)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "szCLw55foSPV",
        "outputId": "c0fe3b63-c8eb-4caf-f8a8-b6870a2c5250"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m313/313\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step\n",
            "[[2.8954701e-06 6.7723613e-07 2.6391492e-05 ... 9.9958056e-01\n",
            "  5.9715317e-06 3.6841346e-05]\n",
            " [5.2640120e-10 1.4955344e-05 9.9997932e-01 ... 8.9647144e-12\n",
            "  5.2418645e-08 4.6321735e-11]\n",
            " [1.9236842e-05 9.9188435e-01 6.2255078e-04 ... 1.9817832e-03\n",
            "  3.6331131e-03 1.0368912e-03]\n",
            " ...\n",
            " [9.3866147e-12 2.2355078e-08 3.3376349e-10 ... 2.9633186e-06\n",
            "  3.5580310e-06 9.0156689e-05]\n",
            " [3.9431027e-09 1.0642200e-11 1.6489470e-11 ... 1.5165940e-08\n",
            "  1.2977628e-05 7.7974292e-08]\n",
            " [1.0679149e-08 9.8203214e-09 5.9231567e-08 ... 5.0018978e-12\n",
            "  1.6796497e-08 2.3980049e-09]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = y_prob.argmax (axis=1)"
      ],
      "metadata": {
        "id": "zehmD8Sao6Jc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(y_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XVf_E-lTo-pM",
        "outputId": "7b3d0c90-87a1-4d46-baa7-64a38d76a603"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[7 2 1 ... 4 5 6]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Assuming you have a list or array of class labels\n",
        "class_labels = ['class_0', 'class_1', 'class_2', 'class_3','class_4', 'class_5', 'class_6', 'class_7','class_8','class_9']\n",
        "# Mapping indices to class labels\n",
        "y_pred_classes = [class_labels[i] for i in y_pred]"
      ],
      "metadata": {
        "id": "JTL4pUqepC7s"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_classes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i_OPWpbtpMIb",
        "outputId": "469e2044-b842-4fe3-83b2-2bb7f4d691a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['class_7',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_0',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_4',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_1',\n",
              " 'class_6',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_0',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_9',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_6',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_6',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_0',\n",
              " 'class_9',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_8',\n",
              " 'class_6',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_8',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_3',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_6',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_6',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " 'class_4',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_3',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_6',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_8',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_0',\n",
              " 'class_7',\n",
              " 'class_7',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_5',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_7',\n",
              " 'class_9',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_3',\n",
              " 'class_0',\n",
              " 'class_0',\n",
              " 'class_5',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_8',\n",
              " 'class_8',\n",
              " 'class_4',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_3',\n",
              " 'class_5',\n",
              " 'class_5',\n",
              " 'class_8',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_6',\n",
              " 'class_6',\n",
              " 'class_3',\n",
              " 'class_2',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_7',\n",
              " 'class_4',\n",
              " 'class_6',\n",
              " 'class_4',\n",
              " 'class_9',\n",
              " 'class_5',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_7',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_1',\n",
              " 'class_6',\n",
              " 'class_9',\n",
              " 'class_1',\n",
              " 'class_4',\n",
              " 'class_4',\n",
              " 'class_5',\n",
              " 'class_4',\n",
              " 'class_0',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_1',\n",
              " 'class_5',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_2',\n",
              " 'class_8',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_6',\n",
              " 'class_7',\n",
              " 'class_1',\n",
              " 'class_6',\n",
              " 'class_2',\n",
              " 'class_3',\n",
              " 'class_9',\n",
              " 'class_0',\n",
              " 'class_1',\n",
              " 'class_2',\n",
              " 'class_2',\n",
              " 'class_0',\n",
              " 'class_8',\n",
              " 'class_9',\n",
              " ...]"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score\n",
        "accuracy_score (y_test, y_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vRyfMI7vphMc",
        "outputId": "de30a386-356c-4a2f-d4e4-5b079f96d651"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9716"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history.history['loss'], label='Training Loss')\n",
        "plt.plot(history.history['val_loss'], label='Validation Loss')\n",
        "plt.legend()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "EQ1bXIGSpxuM",
        "outputId": "41e6da77-c515-422d-ca08-4d8f237d33b9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7b2b5fcdb670>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history.history['accuracy'], label='Training Accuracy')\n",
        "plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n",
        "plt.legend()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "w6yDHYJSp5gs",
        "outputId": "df1ee1b8-7b70-4b43-d1d0-1c8341c1f3ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7b2b6c0c55d0>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.imshow(X_test[0])\n",
        "model.predict(X_test[0].reshape(1,28,28)).argmax(axis=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "id": "8HYOOfsUp-hD",
        "outputId": "54028942-fa58-407e-9b1b-0956336d3b7d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([7])"
            ]
          },
          "metadata": {},
          "execution_count": 27
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "AJdQP685Xs3k"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}